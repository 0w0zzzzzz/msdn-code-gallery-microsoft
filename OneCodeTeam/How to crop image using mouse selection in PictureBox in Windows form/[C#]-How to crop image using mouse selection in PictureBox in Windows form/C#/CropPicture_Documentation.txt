Requirement : Crop an image using Windows Forms PictureBox control

Technology : Windows Forms Application. Visual Studio 2012.

The sample demonstrates how to crop the image from a specific Picturebox control into another Picturebox control using mouse selection or specified coordinates.


To Run the sample : 

Open the project - CropPicture.sln in Visual Studio 2012
Run the application.
Select the area to crop using mouse. View the coordinates selected.
Click on "Crop" button.

Alternately, you can select the check box - "Use Coordinates"
Enter the coordinates for X1,Y1,X2 and Y2
Click on "Crop" button
The area will be highlighted using dashes in the original picture and that area will be cropped as well.


Code Used:

pictureBox1 is the source image box.
pictureBox2 is the destination image box.
checkBox1 is the "Use Coordinates checkbox"


For Mouse Up event:

	private void PicBox_MouseUp(object sender, MouseEventArgs e)
        {
            mouseClicked = false;

            if (endPoint.X != -1)
            {
                Point currentPoint = new Point(e.X, e.Y);
                // Display coordinates
                X2.Text = e.X.ToString();
                Y2.Text = e.Y.ToString();

            }
            endPoint.X = -1;
            endPoint.Y = -1;
            startPoint.X = -1;
            startPoint.Y = -1;
        }
		
		
For mouse down event:

	private void PicBox_MouseDown(object sender, MouseEventArgs e)
        {
            mouseClicked = true;

            startPoint.X = e.X;
            startPoint.Y = e.Y;
            // Display coordinates
            X1.Text = startPoint.X.ToString();
            Y1.Text = startPoint.Y.ToString();

            endPoint.X = -1;
            endPoint.Y = -1;

            rectCropArea = new Rectangle(new Point(e.X, e.Y), new Size());
        }

		
For Mouse move event:

	private void PicBox_MouseMove(object sender, MouseEventArgs e)
        {
            Point ptCurrent = new Point(e.X, e.Y);

            if (mouseClicked)
            {
                if (endPoint.X != -1)
                {
                    // Display Coordinates
                    X1.Text = startPoint.X.ToString();
                    Y1.Text = startPoint.Y.ToString();
                    X2.Text = e.X.ToString();
                    Y2.Text = e.Y.ToString();
                }

                endPoint = ptCurrent;

                if (e.X > startPoint.X && e.Y > startPoint.Y)
                {
                    rectCropArea.Width = e.X - startPoint.X;
                    rectCropArea.Height = e.Y - startPoint.Y;
                }
                else if (e.X < startPoint.X && e.Y > startPoint.Y)
                {
                    rectCropArea.Width = startPoint.X - e.X;
                    rectCropArea.Height = e.Y - startPoint.Y;
                    rectCropArea.X = e.X;
                    rectCropArea.Y = startPoint.Y;
                }
                else if (e.X > startPoint.X && e.Y < startPoint.Y)
                {
                    rectCropArea.Width = e.X - startPoint.X;
                    rectCropArea.Height = startPoint.Y - e.Y;
                    rectCropArea.X = startPoint.X;
                    rectCropArea.Y = e.Y;
                }
                else
                {
                    rectCropArea.Width = startPoint.X - e.X;
                    rectCropArea.Height = startPoint.Y - e.Y;
                    rectCropArea.X = e.X;
                    rectCropArea.Y = e.Y;
                }
                pictureBox1.Refresh();
            }
        }	


To display the dashes:

	private void PicBox_Paint(object sender, PaintEventArgs e)
        {
            Pen drawLine = new Pen(Color.Red);
            drawLine.DashStyle = DashStyle.Dash;
            e.Graphics.DrawRectangle(drawLine, rectCropArea);
        }	


For "CROP" button click event

	private void btnCrop_Click(object sender, EventArgs e)
        {
            pictureBox2.Refresh();
            
            Bitmap sourceBitmap = new Bitmap(pictureBox1.Image, pictureBox1.Width, pictureBox1.Height);
            Graphics g = pictureBox2.CreateGraphics();

            if (!checkBox1.Checked)
            {
                g.DrawImage(sourceBitmap, new Rectangle(0, 0, pictureBox2.Width, pictureBox2.Height), rectCropArea, GraphicsUnit.Pixel);
                sourceBitmap.Dispose();
            }
            else
            {
                
                int x1, x2, y1, y2;
                Int32.TryParse(CX1.Text,out x1);
                Int32.TryParse(CX2.Text, out x2);
                Int32.TryParse(CY1.Text, out y1);
                Int32.TryParse(CY2.Text, out y2);

                if ((x1 < x2 && y1 < y2))
                {
                    rectCropArea = new Rectangle(x1, y1, x2 - x1, y2 - y1);
                }
                else if (x2 < x1 && y2 > y1)
                {
                    rectCropArea = new Rectangle(x2, y1, x1 - x2, y2 - y1);
                }
                else if (x2 > x1 && y2 < y1)
                {
                    rectCropArea = new Rectangle(x1, y2, x2 - x1, y1 - y2);
                }
                else
                {
                    rectCropArea = new Rectangle(x2, y2, x1 - x2, y1 - y2);
                }

                pictureBox1.Refresh(); // This repositions the dashed box to new location as per coordinates entered.

                g.DrawImage(sourceBitmap, new Rectangle(0, 0, pictureBox2.Width, pictureBox2.Height), rectCropArea, GraphicsUnit.Pixel);
                sourceBitmap.Dispose();
            }
        }		